<%= stylesheet_link_tag "projects" %>
<% @page_title = "Projects | Dmitrii Skrylev Portfolio"%>
<% @seo_keywords = "Projects Ruby Rails React JavaScript Dmitrii Skrylev"%>
<%= javascript_pack_tag 'BlogsHistory' %>

<div class="album container">
  <div class="project-album-title m-5 p-2">
    <h1 class="text-center">Welcome to my Projects section</h1>
    <h4 class="text-center">Please take a look at some work I've done:</h4>
    <div id="trees-container">
      <div id="trees"></div>
    </div>
    <hr>
  </div>
  <div class="text-right">
    Total Projects count: <%= @projects.count %>, Date: <%= Date.today %>
  </div>
  <div>
    <div class="row sortable">
      <% @projects.each do |project| %>
          <div class="col-md-12 col-xl-4 col-lg-4 col-sm-12 col-12" data-id="<%= project.id %>">
              <div class="card mb-4 shadow-sm projectCard">
                <div id="img-cropper">
                  <a href="projects/<%= project.id %>"><%= image_tag project.main_image.variant(resize: "300"), class: "bd-placeholder-img card-img-top imageHolder", id: "imageProject" %></a>
                </div>
                <a href="/projects/<%= project.id %>" class="no-decoraction">
                  <div class="card-body">
                    <p class="card-title"><%= project.title %></p>
                    <p class="card-text cardContent"><%= project.project_content.to_plain_text.first(250)%></p>
                    <div class="d-flex justify-content-between align-items-center">
                      <%= link_to 'More...', project, class: "btn btn-sm btn-outline-secondary btn-block mt-3 mb-3" %>
                      <div class="btn-group">
                        <% if current_user %>
                          <button type="button" class="btn btn-sm btn-outline-secondary"><%= link_to 'Edit', edit_project_path(project) %></button>
                          <button type="button" class="btn btn-sm btn-outline-secondary"><%= link_to 'Destroy', project, method: :delete, data: { confirm: 'Are you sure?' } %></button>
                        <% end %>
                      </div>
                    </div>
                    <small class="text-muted">Added: <%= distance_of_time_in_words(project.created_at, Time.now) %> ago.</small>
                  </div>
                </a>
              </div>
          </div>
      <% end %>
    </div>
  </div>
  <div class="m-4">
    <h3 class="text-center mb-4">LATEST BLOGS</h3>
    <hr class="m-3">
    <div id="react-blogs-history"></div>
  </div>
</div>

<br>

<div class="container text-center">
  <%= link_to 'New Project', new_project_path if current_user %>
</div>


<script type="text/javascript" charset="utf-8">
  // Conversion Effort
  var tree1 = '<svg class="tree" viewBox="15 -40 20 40">' +
    '<path class="trunk" d="m25,5 l-1,32 a2,2 0 0,0 2,0 l-1,-32"/>' +
    '<path d="m25,5 a10,10 0 0 1 -2,6" class="left"/>' +
    '<path d="m25,8 a5,5 0 0 1 -2,3" class="left"/>' +
    '<path d="m25,5 a15,15 0 0 0 3,9" class="right"/>' +
    '<path d="m25,10 a6,6 0 0 0 2,3.5" class="right"/>' +
    '<path d="m25,8 a8,8 0 0 1 -4,8" class="left"/>' +
    '<path d="m25,10 a6,6 0 0 1 -3,6" class="left"/>' +
    '<path d="m25,11 a9,9 0 0 0 6,8" class="right"/>' +
    '<path d="m25,13 a8,8 0 0 0 5,6.5" class="right"/>' +
    '<path d="m25,16 a8,8 0 0 0 3,3.5" class="right"/>' +
    '<path d="m25,12 a9,9 0 0 1 -6,9" class="left"/>' +
    '<path d="m25,14 a8,8 0 0 1 -5,7.5" class="left"/>' +
    '<path d="m25,15 a7,7 0 0 1 -3,6.5" class="left"/>' +
    '<path d="m25,22 a10,10 0 0 0 8,5" class="right"/>' +
    '<path d="m25,23 a9,9 0 0 0 7,4.5" class="right"/>' +
    '<path d="m25,24 a8,8 0 0 0 4,3.5" class="right"/>' +
    '<path d="m25,18 a8,8 0 0 1 -6,8" class="left"/>' +
    '<path d="m25,22 a7,7 0 0 1 -4,4" class="left"/>' +
    '<path d="m25,18 a6,6 0 0 0 6,5" class="right"/>' +
    '<path d="m25,20 a7,7 0 0 0 3,3" class="right"/>' +
    '<path d="m25,23.5 a7,7 0 0 1 -8,5" class="left"/>' +
    '<path d="m25,25.5 a8,8 0 0 1 -6,4" class="left"/>' +
    '<path d="m25,27 a8,8 0 0 1 -3,2.5" class="left"/>' +
    '<path d="m25,27 a9,9 0 0 0 9,4" class="right"/>' +
    '<path d="m25,28 a9,9 0 0 0 8,4" class="right"/>' +
    '<path d="m25,29 a10,10 0 0 0 6,3.5" class="right"/>' +
    '<path d="m25,30 a7,7 0 0 0 3,2.5" class="right"/>' +
    '<path d="m25,29 a9,9 0 0 1 -9,4" class="left"/>' +
    '<path d="m25,30 a9,9 0 0 1 -8,4" class="left"/>' +
    '<path d="m25,31 a10,10 0 0 1 -6,3.5" class="left"/>' +
    '<path d="m25,32 a7,7 0 0 1 -3,2.5" class="left"/>' +
    '</svg>';

  var tree2 = '<svg class="tree" viewBox="15 -40 20 40">' +
    '<path class="trunk" d="m25,22 l-0.5,15 a1,1 0 0,0 1,0 l-0.5,-15"/>' +
    '<path d="m25,18 a10,10 0 0 1 -2,6" class="left"/>' +
    '<path d="m25,21 a5,5 0 0 1 -2,3" class="left"/>' +
    '<path d="m25,18 a15,15 0 0 0 3,9" class="right"/>' +
    '<path d="m25,23 a6,6 0 0 0 2,3.5" class="right"/>' +
    '<path d="m25,21 a8,8 0 0 1 -4,8" class="left"/>' +
    '<path d="m25,23 a6,6 0 0 1 -3,6" class="left"/>' +
    '<path d="m25,24 a9,9 0 0 0 6,8" class="right"/>' +
    '<path d="m25,26 a8,8 0 0 0 5,6.5" class="right"/>' +
    '<path d="m25,29 a8,8 0 0 0 3,3.5" class="right"/>' +
    '<path d="m25,25 a9,9 0 0 1 -6,9" class="left"/>' +
    '<path d="m25,27 a8,8 0 0 1 -5,7.5" class="left"/>' +
    '<path d="m25,28 a7,7 0 0 1 -3,6.5" class="left"/>' +
    '</svg>';


  function spawnTrees() {
    buildTrees(50);
    gsap.set('.tree path:not(.trunk)', { drawSVG:0 });
    animateTrees();
  }

  function killTrees() {
    destroyTrees(50);
  }

  function animateTrees() {
    document.querySelectorAll(".tree").forEach(function(tree, i) {
      var branches = $('path:not(.trunk)', tree),
        leftBranches = $('path.left', tree),
        rightBranches = $('path.right', tree),
        floor = $('#floor');
      tl = gsap.timeline({delay: i * 0.25});

      gsap.to(floor, {duration: .3, height:53});
      gsap.set(leftBranches, {rotation: -20, transformOrigin: 'top right'});
      gsap.set(rightBranches, {rotation: 20});

      tl.to(tree, {
        duration: 1.75,
        attr: { viewBox:'15 -3 20 40' },
        ease: "back.out(1)"
      })
        .to(branches, {duration: 0.5, drawSVG:'100%', ease: "power1", stagger: 0.03}, '-=0.25')
        .to(branches, {duration: 2, rotation: 0, ease: "elastic", stagger: 0.03}, '-=1.25');
    });
  }

  function buildTrees(count) {
    let trees = $('#trees');
    let container = $('#trees-container');

    gsap.set([container, trees], {display: 'block'});
    for (var i = 0; i < count; i++) {
      trees.append( Math.random() > 0.25 ? tree1 : tree2);
    }
  }

  function destroyTrees(count) {
    let children = $('#trees').children();
    for (var i = 0; i < count; i++) {
      gsap.to('#trees', {autoAlpha: 0, duration: 1.5, onComplete: () => {
          gsap.to('#floor', {duration: .3, height:"0"});
          children.remove();
        }});
    }
  }

  spawnTrees();
</script>