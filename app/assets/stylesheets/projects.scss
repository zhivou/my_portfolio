@import "jquery-ui";

.projectPicHolder {
  background-position: center center;
  transition: background-image 0.3s ease-in-out;
  height: 500px;
  display: block;
  position: relative;
  width: 100%;
  min-height: 80vh;
  overflow-x: hidden;
  background-size: cover;
}

.projectBody {
  font-family: 'Montserrat', sans-serif;
  margin-top: 20px;
  font-size: 23px;
  padding: 20px;
  color: rgb(68, 68, 102);
  line-height: 20px;
  display: block;

  div {
    line-height: 2.2;
  }
}

.titleLinks {
  font-size: 14px
}

#textHolder {
  background-color: rgba(24,28,31,0.8);
  color: white;
}

.projectCard {
  box-shadow: rgba(39,44,49,0.06) 8px 14px 38px, rgba(39, 44, 49, 0.03) 1px 3px 8px;
  transition: all 0.5s ease;
}

.projectCard:hover {
  box-shadow: rgba(39,44,49,0.07) 8px 28px 50px, rgba(39, 44, 49, 0.04) 1px 6px 12px;
  transition: all 0.4s ease;
  transform: translate3D(0, -1px, 0) scale(1.02);
}

.imageHolder {
  width: 100%;
  height: 225px;
}

.projectCard {
  min-height: 500px;
}

pre {
  background-color: #193641 !important;
  border-radius: 20px;
  padding: 40px !important;
  width: 90% !important;
  margin-left: 5% !important;
  line-height: 1 !important;
  font-size: 1rem !important;
  margin-top: 20px !important;
  margin-bottom: 20px !important;
}

#imageProject {
  width: 100%;
  object-fit: cover;
}

.project-album-title {
  margin: 25px;
  margin-bottom: 40px;
}


$treeCount: 50;
$maxHeight: 105%;
$minHeight: 25%;
$minWidth: $minHeight * (2/5);

$bg: #fff;
$fg: black;
$steps: 5;

#trees {
  position: relative;
  background: $bg;
  overflow: hidden;
  height: 25vh;
  width: 100%;
  margin-top: 10px;
}

#floor {
  background: $fg;
  position: absolute;
  bottom: 0px;
  // height: 53px;
  height: 0px;
  width: 100%;
  left: 0;
}

.tree {
  stroke: $fg;
  fill: none;
  stroke-linecap: round;
  stroke-linejoin: round;
  stroke-width: 1.2px;
  pointer-events: none;

  display: block;
  position: absolute;
  bottom: -5px;

  transform-origin: center calc(100% - 5px);

  path:not(.trunk) {
    pointer-events: none;
  }
}

.tree path {
  pointer-events: visibleStroke;
}

@for $i from 1 through $treeCount {
  .tree:nth-of-type(#{$i}) {
    $height: (random() * ($maxHeight - $minHeight)) + $minHeight;
    $width: $height * (2/5);
    @if (random() > 0.5) {
      transform: scaleX(-1);
    }

    height: $height;
    left: (random() * (100 + ($minWidth / 2))) - ($minWidth / 4);
    // top: ((($height - $minHeight) / ($maxHeight - $minHeight)) * ($maxHeight / 2)) - ($minHeight / 2);
    z-index: round(($height * 100) / (($height * 100) * 0 + 1));

    $scale: round(
                    (($height - $minHeight) / ($maxHeight - $minHeight)) * ($steps - 1)
    );
    $r: red($bg) + (((red($fg) - red($bg)) / $steps) * ($scale + 1));
    $g: green($bg) + (((green($fg) - green($bg)) / $steps) * ($scale + 1));
    $b: blue($bg) + (((blue($fg) - blue($bg)) / $steps) * ($scale + 1));
    stroke: rgb($r, $g, $b);
    // transform: rotate($scale * 10deg);
    .trunk {
      fill: rgb($r, $g, $b);
    }
  }
}
