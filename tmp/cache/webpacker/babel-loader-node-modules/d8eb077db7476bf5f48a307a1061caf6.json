{"ast":null,"code":"var _jsxFileName = \"/myapp/app/javascript/packs/skills_app/ScrollSections.jsx\",\n    _this = this;\n\nimport React from 'react';\n\nvar ScrollSections = function ScrollSections(props) {\n  var id = \"section-\".concat(props.exp.sort);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: id,\n    className: \"message mine\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 14\n    }\n  }, props.exp.title)), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }\n  }, props.exp.organization), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, \"Started: \", props.exp.date_started, \", Ended: \", props.exp.date_ended), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"small\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 14\n    }\n  }, props.exp.exp_body)));\n};\n\nScrollSections.propTypes = {\n  exp: PropTypes.object.isRequired\n};\nexport default ScrollSections; // Note: Here I think is better to build invisible sections based on a window size. So when the sroll\n// spy hits it, it will change a class for exp element 1 lvl above.","map":{"version":3,"sources":["/myapp/app/javascript/packs/skills_app/ScrollSections.jsx"],"names":["React","ScrollSections","props","id","exp","sort","title","organization","date_started","date_ended","exp_body","propTypes","PropTypes","object","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAW;AAChC,MAAMC,EAAE,qBAAcD,KAAK,CAACE,GAAN,CAAUC,IAAxB,CAAR;AAEA,sBACI;AAAK,IAAA,EAAE,EAAEF,EAAT;AAAa,IAAA,SAAS,EAAC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACFD,KAAK,CAACE,GAAN,CAAUE,KADR,CAAL,CADF,eAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMJ,KAAK,CAACE,GAAN,CAAUG,YAAhB,CAJF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAeL,KAAK,CAACE,GAAN,CAAUI,YAAzB,eAAgDN,KAAK,CAACE,GAAN,CAAUK,UAA1D,CALF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQP,KAAK,CAACE,GAAN,CAAUM,QAAlB,CAAL,CANF,CADJ;AAUD,CAbD;;AAeAT,cAAc,CAACU,SAAf,GAA2B;AACzBP,EAAAA,GAAG,EAAEQ,SAAS,CAACC,MAAV,CAAiBC;AADG,CAA3B;AAIA,eAAeb,cAAf,C,CAEA;AACA","sourcesContent":["import React from 'react'\n\nconst ScrollSections = (props) => {\n  const id = `section-${props.exp.sort}`;\n\n  return (\n      <div id={id} className=\"message mine\">\n        <div><h4>\n          {props.exp.title}\n        </h4></div>\n        <div>{props.exp.organization}</div>\n        <div>Started: {props.exp.date_started}, Ended: {props.exp.date_ended}</div>\n        <div><small>{props.exp.exp_body}</small></div>\n      </div>\n  );\n};\n\nScrollSections.propTypes = {\n  exp: PropTypes.object.isRequired,\n};\n\nexport default ScrollSections\n\n// Note: Here I think is better to build invisible sections based on a window size. So when the sroll\n// spy hits it, it will change a class for exp element 1 lvl above.\n"]},"metadata":{},"sourceType":"module"}