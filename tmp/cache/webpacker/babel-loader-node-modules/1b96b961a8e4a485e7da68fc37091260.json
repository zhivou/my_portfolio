{"ast":null,"code":"var _jsxFileName = \"/myapp/app/javascript/packs/skills_slide/ExpSlider.jsx\";\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, \"prototype\", { writable: false }); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); Object.defineProperty(subClass, \"prototype\", { writable: false }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (typeof call === \"object\" || typeof call === \"function\")) { return call; } else if (call !== void 0) { throw new TypeError(\"Derived constructors may only return object or undefined\"); } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ScrollSections from './ScrollSections';\n\nvar ExpSlider = /*#__PURE__*/function (_Component) {\n  _inherits(ExpSlider, _Component);\n\n  var _super = _createSuper(ExpSlider);\n\n  function ExpSlider(props) {\n    _classCallCheck(this, ExpSlider);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(ExpSlider, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate() {\n      var controllerR = new ScrollMagic.Controller();\n      this.props.exp.map(function (experience) {\n        var id = \"section-\".concat(experience.sort);\n        new ScrollMagic.Scene({\n          triggerElement: \"#\".concat(id),\n          offset: -70 // move trigger to center of element\n\n        }).setClassToggle(\"#\".concat(id), \"visible\") // add class to reveal\n        .addTo(controllerR);\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var left = true;\n      var sections = this.props.exp.map(function (experience) {\n        left = !left;\n        return /*#__PURE__*/React.createElement(\"div\", {\n          key: experience.sort,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(ScrollSections, {\n          exp: experience,\n          position: left,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }\n        })));\n      });\n      return /*#__PURE__*/React.createElement(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }\n      }, sections);\n    }\n  }]);\n\n  return ExpSlider;\n}(Component);\n\nExpSlider.propTypes = {\n  exp: PropTypes.array.isRequired,\n  skin: PropTypes.string,\n  effect: PropTypes.string\n};\nExpSlider.defaultProps = {\n  skin: \"standard\",\n  effect: \"standard\"\n};\nexport default ExpSlider;","map":{"version":3,"sources":["/myapp/app/javascript/packs/skills_slide/ExpSlider.jsx"],"names":["React","Component","PropTypes","ScrollSections","ExpSlider","props","controllerR","ScrollMagic","Controller","exp","map","experience","id","sort","Scene","triggerElement","offset","setClassToggle","addTo","left","sections","propTypes","array","isRequired","skin","string","effect","defaultProps"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;IAEMC,S;;;;;AACJ,qBAAYC,KAAZ,EAAkB;AAAA;;AAAA,6BACVA,KADU;AAEjB;;;;WAED,8BAAqB;AACnB,UAAIC,WAAW,GAAG,IAAIC,WAAW,CAACC,UAAhB,EAAlB;AAEA,WAAKH,KAAL,CAAWI,GAAX,CAAeC,GAAf,CAAmB,UAAAC,UAAU,EAAI;AAC/B,YAAMC,EAAE,qBAAcD,UAAU,CAACE,IAAzB,CAAR;AAEA,YAAIN,WAAW,CAACO,KAAhB,CAAsB;AACpBC,UAAAA,cAAc,aAAMH,EAAN,CADM;AAEpBI,UAAAA,MAAM,EAAE,CAAC,EAFW,CAER;;AAFQ,SAAtB,EAIGC,cAJH,YAIsBL,EAJtB,GAI4B,SAJ5B,EAIuC;AAJvC,SAKGM,KALH,CAKSZ,WALT;AAMD,OATD;AAUD;;;WAED,kBAAQ;AAAA;;AACN,UAAIa,IAAI,GAAG,IAAX;AAEA,UAAMC,QAAQ,GACZ,KAAKf,KAAL,CAAWI,GAAX,CAAeC,GAAf,CAAmB,UAAAC,UAAU,EAAI;AAC/BQ,QAAAA,IAAI,GAAG,CAACA,IAAR;AACE,4BACE;AAAK,UAAA,GAAG,EAAER,UAAU,CAACE,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,cAAD;AAAgB,UAAA,GAAG,EAAEF,UAArB;AAAiC,UAAA,QAAQ,EAAEQ,IAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,CADF,CADF;AAOH,OATD,CADF;AAaA,0BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACIC,QADJ,CADF;AAKD;;;;EAzCqBnB,S;;AA4CxBG,SAAS,CAACiB,SAAV,GAAsB;AACpBZ,EAAAA,GAAG,EAAEP,SAAS,CAACoB,KAAV,CAAgBC,UADD;AAEpBC,EAAAA,IAAI,EAAEtB,SAAS,CAACuB,MAFI;AAGpBC,EAAAA,MAAM,EAAExB,SAAS,CAACuB;AAHE,CAAtB;AAMArB,SAAS,CAACuB,YAAV,GAAyB;AACvBH,EAAAA,IAAI,EAAE,UADiB;AAEvBE,EAAAA,MAAM,EAAE;AAFe,CAAzB;AAKA,eAAetB,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport ScrollSections from './ScrollSections'\n\nclass ExpSlider extends Component {\n  constructor(props){\n    super(props);\n  }\n\n  componentDidUpdate() {\n    let controllerR = new ScrollMagic.Controller();\n\n    this.props.exp.map(experience => {\n      const id = `section-${experience.sort}`;\n\n      new ScrollMagic.Scene({\n        triggerElement: `#${id}`,\n        offset: -70 // move trigger to center of element\n      })\n        .setClassToggle(`#${id}`, \"visible\") // add class to reveal\n        .addTo(controllerR);\n    })\n  }\n\n  render(){\n    let left = true;\n\n    const sections = (\n      this.props.exp.map(experience => {\n        left = !left;\n          return(\n            <div key={experience.sort}>\n              <div>\n                <ScrollSections exp={experience} position={left}/>\n              </div>\n            </div>\n          )\n      })\n    );\n\n    return (\n      <div>\n        { sections }\n      </div>\n    )\n  }\n}\n\nExpSlider.propTypes = {\n  exp: PropTypes.array.isRequired,\n  skin: PropTypes.string,\n  effect: PropTypes.string\n};\n\nExpSlider.defaultProps = {\n  skin: \"standard\",\n  effect: \"standard\"\n};\n\nexport default ExpSlider\n"]},"metadata":{},"sourceType":"module"}