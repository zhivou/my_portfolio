{"ast":null,"code":"'use strict';\n\nfunction _typeof2(obj) { \"@babel/helpers - typeof\"; return _typeof2 = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof2(obj); }\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && _typeof2(Symbol.iterator) === \"symbol\" ? function (obj) {\n  return _typeof2(obj);\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : _typeof2(obj);\n};\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nexports.default = polylinearScale;\n\nvar _piecewise = require('./piecewise');\n\nvar _piecewise2 = _interopRequireDefault(_piecewise);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction polylinearScale(stops) {\n  var xs = [];\n  var ys_r = [];\n  var ys_g = [];\n  var ys_b = [];\n  stops.forEach(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        domain = _ref2[0],\n        range = _ref2[1];\n\n    xs.push(domain);\n\n    if (isNaN(range)) {\n      ys_r.push(parseInt(range.substr(1, 2), 16));\n      ys_g.push(parseInt(range.substr(3, 2), 16));\n      ys_b.push(parseInt(range.substr(5, 2), 16));\n    } else {\n      ys_r.push(range);\n    }\n  });\n  var pw_r = (0, _piecewise2.default)(xs, ys_r);\n\n  if (ys_g.length && ys_b.length) {\n    var _ret = function () {\n      var pw_g = (0, _piecewise2.default)(xs, ys_g);\n      var pw_b = (0, _piecewise2.default)(xs, ys_b);\n      return {\n        v: function v(x) {\n          return 'rgb(' + Math.round(pw_r(x)) + ', ' + Math.round(pw_g(x)) + ', ' + Math.round(pw_b(x)) + ')';\n        }\n      };\n    }();\n\n    if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n  } else {\n    return function (x) {\n      return pw_r(x);\n    };\n  }\n}\n\nmodule.exports = exports['default'];","map":null,"metadata":{},"sourceType":"module"}